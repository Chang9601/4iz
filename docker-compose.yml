services:
  app:
    container_name: 4iz-app
    image: 4iz
    build:
      dockerfile: Dockerfile
      context: .
      target: dev
    restart: always
    # 개발 환경에서 사용되는 명령어
    command: sh -c '/wait && npm run start:dev'
    # 포트는 따옴표를 추가
    ports:
      - '3000:3000'
    volumes:
      # 개발 환경에서 소스코드 바인드 바운트
      - .:/opt/node_app/app
      # 두 개의 파일을 바인드 마운트하면 빌드를 다시하지 않고도 개발 중에 패키지를 추가 가능
      # 예를 들어, 개발 중에 앱에 bower를 추가하려면 컨테이너 내에서 설치한 후 nodemon이 다시 시작
      # 변경 내용은 "docker compose down"을 실행할 때까지 유지되며 다음 빌드를 위해 호스트에 저장
      # 부모 디렉토리에서 코드 바인드 마운트로 설치
      # docker compose exec -w /opt/node_app node npm install --save bower
      - ./package.json:/opt/node_app/package.json
      - ./package-lock.json:/opt/node_app/package-lock.json
    environment:
      - NODE_ENV=development
      - DB_TYPE=mysql
      - DB_HOST=db-test
      - DB_PORT=3306
      - DB_DATABASE=4iz
      - DB_USERNAME=root
      - DB_PASSWORD=root
      - DB_LOGGING=true
      - JWT_SECRET_KEY=4iz-secret-key
      - WAIT_HOSTS=db-dev:3306
      - WAIT_TIMEOUT=300
      - WAIT_SLEEP_INTERVAL=10
      - WAIT_HOST_CONNECT_TIMEOUT=10
    depends_on:
      db-dev:
        condition: service_healthy
      db-test:
        condition: service_healthy
    healthcheck:
      disable: true

  db-dev:
    container_name: 4iz-db-dev
    image: mysql:8.0.33-debian
    cap_add:
      - SYS_NICE
    ports:
      - '3307:3306'
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=4iz
    volumes:
      # 데이터베이스와 데이터가 저장된 덤프 파일 바인드 마운트
      - ./database-dump:/docker-entrypoint-initdb.d
      # 바인드 마운트를 미리 사용했기에 볼륨 사용
      - db-dev:/var/lib/mysql
    healthcheck:
      test:
        [
          'CMD',
          'mysqladmin',
          'ping',
          '-h',
          'localhost',
          '-u',
          'root',
          '-p$$MYSQL_ROOT_PASSWORD',
        ]
      interval: 5s
      timeout: 4s
      retries: 5
      start_period: 4m30s

  # extends 사용했으나 포트 문제 발생
  db-test:
    container_name: 4iz-db-test
    image: mysql:8.0.33-debian
    cap_add:
      - SYS_NICE
    ports:
      - '3308:3306'
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=4iz
    volumes:
      - ./database-dump:/docker-entrypoint-initdb.d
      - db-test:/var/lib/mysql
    healthcheck:
      test:
        [
          'CMD',
          'mysqladmin',
          'ping',
          '-h',
          'localhost',
          '-u',
          'root',
          '-p$$MYSQL_ROOT_PASSWORD',
        ]
      interval: 5s
      timeout: 4s
      retries: 5
      start_period: 4m30s

volumes:
  db-dev:
  db-test:
